imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@VeniceAppBundle/Resources/config/config.yml" }


parameters:
    trinity.search.doctrine_prefix: "NecktieAppBundle"
    trinity.search.namespace: "Necktie\\AppBundle\\Entity"

    url_mike_saffaie_facebook: https://www.facebook.com/pages/Mike-Saffaie/359627120721911
    url_mike_saffaie_twitter: https://twitter.com/califitmike
    url_mike_saffaie_instagram: https://instagram.com/califitmike
    url_mike_saffaie_youtube: https://www.youtube.com/channel/UC8ZTr6n7uWVVGWUomJHSaKA

    url_flo_fit_facebook: https://www.facebook.com/GetFLOFIT
    url_flo_fit_twitter: https://twitter.com/getflofit
    url_flo_fit_instagram: https://instagram.com/getflofit
    url_flo_fit_youtube: https://www.youtube.com/channel/UCqjt-Tod1JMGgsjVevl4Lwg

    url_flo_rida_facebook: https://www.facebook.com/officialflo
    url_flo_rida_twitter: https://twitter.com/official_flo
    url_flo_rida_instagram: https://instagram.com/official_flo
    url_flo_rida_youtube: https://www.youtube.com/channel/UCBRFlde39a2U4nAkmGqJwAQ

    url_natalie_larose_facebook: https://www.facebook.com/NatalieLaRoseMusic
    url_natalie_larose_twitter: https://twitter.com/natalielarose
    url_natalie_larose_instagram: https://instagram.com/natalielarose
    url_natalie_larose_youtube: https://www.youtube.com/channel/UCL1TElUgyJX9PRacUphrSsA

    social_stream_reload_min_time: 300
    blog_number_of_posts_displayed: 5
    downloads_number_of_product_displayed: 5
    social_stream_number_of_posts_downloaded: 4
    number_of_blog_posts: 2
    number_of_product_posts: 4


    forum_read_all_url: '%forum_url%/messages/inbox'
    forum_read_conversation_url: '%forum_url%/messages/'
    forum_send_new_message: '%forum_url%/messages/add/'

    messages_url: '%forum_url%messages/inbox'

    connector_service_name: flofit.dev_env_connector
    forum_service_name:     flofit.prod_env_forum_connector

    facebook_client_id: 748756945252163
    facebook_client_secret: b1ff879b869c5d8058317656d41f7caf

    twitter_client_id: 5XwU6T0OvcxPLeAvsBIPPsaUO # GET FLO FIT TWITTER ACC
    twitter_client_secret: v4rCuvlllMbCvpUA1UsfWgEM2eJwiupwtp6OQeziaXenK9RuHg
    twitter_client_token: 2866139031-30xun4SajVzz2A5RwiGE28NXNfZKDXaTojNJLs6
    twitter_client_token_secret: 6W7FStt3iJnm7kXXei4KKUyrlEdVzMwHYNtVkpmlotoCw

    instagram_client_id: 0c1781ac48094ae5b51467456b435ff0
    instagram_client_secret: 0b6d9489c5c7b7dd0527bb5a73089f44

    google_client_id: 707014016730-tkm94ahnordhpp9bs7gnpk2pll56hr18
    google_client_secret: Jzv4zujtzy-hq-THIa33zeXu

    maropost_account_id: 478
    maropost_auth_token: 4cc55665ee6708ea9dd8eb6c8b0f3c59e96f9909

    forum_secret_key: 8894eee8-3d3c-4ea4-8465-5447d69a2f16
    forum_auth_cookie_name: Vanilla
    forum_auth_cookie_salt: A3X88X2UCR
    forum_auth_cookie_domain: .getnecktie.com

# You can override default configuration here or in the enviroment files (config_dev, config_prod).
# Confiruration in the enviroment files will override configuration defined here

#extends doctrine config from the venice framework
doctrine:
    dbal:
        default_connection: default
        connections:
            default:
              charset:  utf8mb4
              default_table_options:
                charset: utf8mb4
                collate: utf8mb4_unicode_ci
              options:
                1002: "SET NAMES 'utf8mb4'"

            oldFlofit:
                driver:   pdo_mysql
                host:     '%database_host_flofit%'
                port:     '%database_port_flofit%'
                dbname:   '%database_name_flofit%'
                user:     '%database_user_flofit%'
                password: '%database_password_flofit%'

    orm:
        default_entity_manager: default
        entity_managers:
            oldFlofit:
                connection: oldFlofit
                mappings:
                    FlofitEntitiesBundle:
                        type: annotation
                        prefix: FlofitEntities\Bundle\FlofitEntitiesBundle\FlofitEntities
                        dir: FlofitEntities/BlogBundle


trinity_settings:
   settings:
      app.trial: 7

      user_settings.publicProfile: true
      user_settings.displayEmail: true
      user_settings.birthDateStyle: 1
      user_settings.displayFullName: true
      user_settings.displayLocation: true
      user_settings.displayForumActivity: true
      user_settings.displaySocialMedia: true
      user.productOfferId: ~
      user.trialStart: ~
      user.trialEnd: ~
      user.trialExtendPopupShown: false
      user.trialEndPopupShown: false
      user.trial7daysEndPopupShown: false
      user.displayQuickStartGuide: true
      user.firstLogin: true
      user.communityId: ~
      user.api_token: ~
      user.api_refresh_token: ~

trinity_messages:
    sender_identification: "client_3"

#trinity_admin:
#    froala_editor_settings:
#        pluginsEnabled: ['url']


twig:
#  paths:
#       An absolute path to Venice
#      '%kernel.root_dir%/../vendor/modpreneur/venice/src/Venice/AdminBundle/Resources/views': VeniceFramework
  globals:
    necktie_url: '%necktie_url%'
  form_themes:
    - 'VeniceFrontBundle:Default:bowtieForms.html.twig'
    - 'TrinityAdminBundle:Form:bowtie_form_layout.html.twig'
    - 'TrinityAdminBundle:Form:color_layout.html.twig'


assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    bundles:  [ TrinityAdminBundle, VeniceFrontBundle, VeniceAppBundle, Uran1980FancyBoxBundle, BmatznerJQueryBundle, FrontBundle ]
    filters:
       lessphp:
         bin: "%kernel.root_dir%/../vendor/leafo/lessphp/lessc.inc.php"
         apply_to: ".less$"


trinity_notification:
    # do not forget to define this config if you have overriden the entities!
    entities:
        product: AppBundle\Entity\Product\StandardProduct
        billing-plan: AppBundle\Entity\BillingPlan
        user: AppBundle\Entity\User
        product-access: AppBundle\Entity\ProductAccess
        pay-system: Venice\AppBundle\Entity\PaySystem
        pay-system-vendor: Venice\AppBundle\Entity\PaySystemVendor
    forms:
        product: AppBundle\Form\Notification\ProductType
        billing-plan: AppBundle\Form\Notification\BillingPlanType
        user: AppBundle\Form\Notification\UserType
        product-access: AppBundle\Form\Notification\ProductAccessType
        pay-system: Venice\AppBundle\Form\Notification\PaySystemType
        pay-system-vendor: Venice\AppBundle\Form\Notification\PaySystemVendorType

venice_app:

    # You can define which form should be used for which entity
    # By this configuration you state that the entity with class "key" should use form with class "value"
    # format: "key": "value"
    #         entity class : form class
    # By defining this you can define forms even for the framework entities
    # There MUST be entry for each extended(overrided) entity!
    entity_forms:
        AppBundle\Entity\BillingPlan: AppBundle\Form\BillingPlanType
        AppBundle\Entity\BlogArticle: AppBundle\Form\BlogArticleType
        AppBundle\Entity\Content\Content: AppBundle\Form\Content\ContentType
        AppBundle\Entity\Content\ContentInGroup: AppBundle\Form\Content\ContentInGroupType
        AppBundle\Entity\Content\GroupContent: AppBundle\Form\Content\GroupContentType
        AppBundle\Entity\Content\HtmlContent: AppBundle\Form\Content\HtmlContentType
        AppBundle\Entity\Content\IframeContent: AppBundle\Form\Content\IframeContentType
        AppBundle\Entity\Content\Mp3Content: AppBundle\Form\Content\Mp3ContentType
        AppBundle\Entity\Content\PdfContent: AppBundle\Form\Content\PdfContentType
        AppBundle\Entity\Content\VideoContent: AppBundle\Form\Content\VideoContentType
        AppBundle\Entity\Product\FreeProduct: AppBundle\Form\Product\FreeProductType
        AppBundle\Entity\Product\Product: AppBundle\Form\Product\ProductType
        AppBundle\Entity\Product\StandardProduct: AppBundle\Form\Product\StandardProductType
        AppBundle\Entity\ProductAccess: AppBundle\Form\ProductAccessType
        AppBundle\Entity\User: AppBundle\Form\User\UserType
        AppBundle\Entity\Category: AppBundle\Form\CategoryType
        AppBundle\Entity\Tag: AppBundle\Form\TagType

    forms_override:
        # The RolesType from the framework is going to be replaced with RolesType from the application
        Venice\AppBundle\Form\User\RolesType: AppBundle\Form\User\RolesType

    # Define which entity from the framework is extenderd by which entity from application
    # This is used by framework while working with entities.
    # When trying to create e.g. User entity it looks right there to determine which class it should use.
    entity_override:
        Venice\AppBundle\Entity\BillingPlan: AppBundle\Entity\BillingPlan
        Venice\AppBundle\Entity\BlogArticle: AppBundle\Entity\BlogArticle
        Venice\AppBundle\Entity\Content\Content: AppBundle\Entity\Content\Content
        Venice\AppBundle\Entity\Content\ContentInGroup: AppBundle\Entity\Content\ContentInGroup
        Venice\AppBundle\Entity\Content\GroupContent: AppBundle\Entity\Content\GroupContent
        Venice\AppBundle\Entity\Content\HtmlContent: AppBundle\Entity\Content\HtmlContent
        Venice\AppBundle\Entity\Content\IframeContent: AppBundle\Entity\Content\IframeContent
        Venice\AppBundle\Entity\Content\Mp3Content: AppBundle\Entity\Content\Mp3Content
        Venice\AppBundle\Entity\Content\PdfContent: AppBundle\Entity\Content\PdfContent
        Venice\AppBundle\Entity\Content\VideoContent: AppBundle\Entity\Content\VideoContent
        Venice\AppBundle\Entity\Product\FreeProduct: AppBundle\Entity\Product\FreeProduct
        Venice\AppBundle\Entity\Product\Product: AppBundle\Entity\Product\Product
        Venice\AppBundle\Entity\Product\StandardProduct: AppBundle\Entity\Product\StandardProduct
        Venice\AppBundle\Entity\ProductAccess: AppBundle\Entity\ProductAccess
        Venice\AppBundle\Entity\User: AppBundle\Entity\User
        Venice\AppBundle\Entity\Category: AppBundle\Entity\Category
        Venice\AppBundle\Entity\Tag: AppBundle\Entity\Tag


    entity_mapping:
    # By defining this section you do not have to define annotation:
    # @DiscriminatorMap({"html" = "HtmlContent", "pdf" = "PdfContent", ...})
    # On each framework entity. That would be unreal because there would have to be class names from the application.
#    CONTENTS ########################################################################
        content:
            entity: Venice\AppBundle\Entity\Content\Content
            map:
                demo_group_content: AppBundle\Entity\Content\GroupContent
                demo_html_content: AppBundle\Entity\Content\HtmlContent
                demo_iframe_content: AppBundle\Entity\Content\IframeContent
                demo_mp3_content: AppBundle\Entity\Content\Mp3Content
                demo_pdf_content: AppBundle\Entity\Content\PdfContent
                demo_video_content: AppBundle\Entity\Content\VideoContent
#    PRODUCTS ########################################################################
        product:
            entity: Venice\AppBundle\Entity\Product\Product
            map:
                demo_standard_product: AppBundle\Entity\Product\StandardProduct
                demo_free_product: AppBundle\Entity\Product\FreeProduct
                demo_client_product: AppBundle\Entity\Product\ClientProduct
                demo_shipping_product: AppBundle\Entity\Product\ShippingProduct

#    OTHERS ########################################################################
        user:
            entity: Venice\AppBundle\Entity\User
            map:
                demo_user: AppBundle\Entity\User

        product_access:
            entity: Venice\AppBundle\Entity\ProductAccess
            map:
                demo_product_access: AppBundle\Entity\ProductAccess

        billing_plan:
            entity: Venice\AppBundle\Entity\BillingPlan
            map:
                demo_billing_plan: AppBundle\Entity\BillingPlan

        blog_article:
            entity: Venice\AppBundle\Entity\BlogArticle
            map:
                demo_blog_article: AppBundle\Entity\BlogArticle

        category:
            entity: Venice\AppBundle\Entity\Category
            map:
              demo_category: AppBundle\Entity\Category

        tag:
            entity: Venice\AppBundle\Entity\Tag
            map:
              demo_category: AppBundle\Entity\Tag

        content_product:
            entity: Venice\AppBundle\Entity\ContentProduct
            map:
                demo_content_product: AppBundle\Entity\ContentProduct

        oauth_token:
            entity: Venice\AppBundle\Entity\OAuthToken
            map:
                demo_oauth_token: AppBundle\Entity\OAuthToken

        content_in_group:
            entity: Venice\AppBundle\Entity\Content\ContentInGroup
            map:
                demo_content_in_group: AppBundle\Entity\Content\ContentInGroup

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: VeniceApp\Migrations
    table_name: migration_versions
    name: Application Migrations

liip_imagine:
    loaders:
        stream.profile_photos:
            stream:
                wrapper: https://%amazon_s3_bucket%.s3.amazonaws.com/profile_photos_original/
    cache: profile_photos
    filter_sets:
        profile_picture_cropped:
          data_loader: stream.profile_photos
          quality: 75


knp_gaufrette:
    stream_wrapper: ~
    adapters:
        amazon_adapter:
            aws_s3:
                service_id: flofit_amazon_s3 #this needs to match the "service" you defined above
                bucket_name: %amazon_s3_bucket%
                options:
                    directory: profile_photos_original
                    create: false
                    acl: 'public-read'


        amazon_assets:
            aws_s3:
                service_id: flofit_amazon_s3 #this needs to match the "service" you defined above
                bucket_name: %amazon_s3_bucket%
                detect_content_type: true
                options:
                    directory: assets
                    create: true
                    acl: 'public-read'


        froala_uploads:
              aws_s3:
                  service_id: flofit_amazon_s3 #this needs to match the "service" you defined above
                  bucket_name: flofit-uploads
                  detect_content_type: true
                  options:
                      create: true
                      acl: 'public-read'


    filesystems:
        aws_profile_photos_original:
            adapter: amazon_adapter
        aws_assets:
            adapter: amazon_assets
        aws_froala_uploads:
            adapter: froala_uploads


vich_uploader:
    db_driver: orm
    storage: gaufrette
    mappings:
        user_profile:
            uri_prefix:
            upload_destination: aws_profile_photos_original
            delete_on_remove: true
            delete_on_update: true
            namer: vich_uploader.namer_uniqid
            inject_on_load: true
            namer: ~

fos_rest:
  serializer:
          serialize_null: true



fos_user:
  from_email:
    address: info@getnecktie.com
    sender_name: Flofit